<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2014, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!--
   This is the OSGi Blueprint XML file defining the CXF JAX-RS beans.  Because the file is in the
   OSGI-INF/blueprint directory inside our JAR, it will be automatically activated as soon as the artifact is installed.

   The root element for any OSGi Blueprint file is 'blueprint' - you also see the namespace definitions for both the Blueprint
   and the CXF JAX-RS namespaces.
   
   xmlns:cxf="http://cxf.apache.org/blueprint/core"
   
   
-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
	xmlns:cxf="http://camel.apache.org/schema/cxf"
	xmlns:camel="http://camel.apache.org/schema/blueprint"    
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
	xmlns:sec="http://cxf.apache.org/configuration/security"
	xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"		
    xsi:schemaLocation="

      http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd
      http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd

      http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
      http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd
	   http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
      http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd">


	<cm:property-placeholder id="psLink.placeholder" persistent-id="pslink.persistent">		
		<cm:default-properties>
			<cm:property name="SPINE_SYNC_URL" value="https://msg.dev.spine2.ncrs.nhs.uk/sync-service"/>
			<cm:property name="SPINE_KEY_STORE_LOCATION" value="/home/infradmin/psHealth/certificates/new/dev.jks"/>
			<cm:property name="SPINE_TRUST_STORE_LOCATION" value="/home/infradmin/psHealth/certificates/trustStore/myTrustStore"/>			
			<cm:property name="SPINE_TIME_OUT" value="5000"/>
		</cm:default-properties>
	</cm:property-placeholder>


	<camel:sslContextParameters id="sslContextParameters">
		<camel:keyManagers keyPassword="changeit">
			<camel:keyStore resource="/home/infradmin/psHealth/certificates/new/dev.jks" password="changeit"/>
		</camel:keyManagers>
		<camel:trustManagers>
			<camel:keyStore type="JKS" resource="/home/infradmin/psHealth/certificates/trustStore/myTrustStore" password="changeit" />
		</camel:trustManagers>		
	</camel:sslContextParameters>


	<!--jaxrs:server id="PSLinkService" address="/pslink">
		<jaxrs:serviceBeans>
			<ref component-id="PDSController"/>
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
		</jaxrs:providers>
		<jaxrs:features>
			<bean class="io.fabric8.cxf.endpoint.SwaggerFeature">
				<property name="title" value="Fabric8:CXF:Quickstarts - Customer Service" />
				<property name="description" value="Sample REST-based Customer Service" />
				<property name="version" value="6.3.0.redhat-187" />
			</bean>
		</jaxrs:features>
	</jaxrs:server-->

	<!--dataFormats>		
		<jacksonxml id="jack" unmarshalTypeName="uk.co.pshealth.pslink.dto.PatientInfo"/>		
	</dataFormats-->

	<camelContext  id="camelContext" xmlns="http://camel.apache.org/schema/blueprint"> <!-- trace="true"  -->		

		<properties>
			<property key="CamelLogDebugBodyMaxChars" value="5000"/>			
		</properties>

		<onException>
			<exception>uk.co.pshealth.pslink.exception.SpineSocketTimeoutException</exception>
			<redeliveryPolicy maximumRedeliveries="2" redeliveryDelay="1000"  />			
			<!--bean ref="GenericExceptionHandler" method="SOAPFaultExceptionHandler" /-->
		</onException>

		<route id="psLinkRoute"  handleFault="true">
			<from uri="cxfrs:bean:PDSControllerRS?bindingStyle=SimpleConsumer"/>				
			<!--log message="ART Incoming Request is ${body}"/-->
			<to uri="bean:MessageProcessor"/>	
			<choice>
				<when>
					<!-- interaction set in exchange header -->
					<xpath>$interactionId = 'QUPA_IN000005UK01'</xpath>					
					<to uri="validator:schema\SimpleTraceQuery.xsd"/>
					<to uri="xquery:XQuery\SimpleTraceQuery.xquery"/>	
				</when>
				<when>
					<xpath>$interactionId = 'QUPA_IN000008UK02'</xpath>
					<to uri="validator:schema\RetrievalQuery.xsd"/>
					<to uri="xquery:XQuery\RetrievalQuery.xquery"/>	
				</when>
			</choice>
			<to uri="bean:SOAPRequestProcessor"/>
			<!--setBody><constant>(objectClass=*)</constant></setBody>
			<to uri="ldap:ldapserver?base=dc=example,dc=com"/>			
			<to uri="bean:ldapSearchProcessor"/-->						
			<!--to uri="cxf:bean:soapWebServiceEndpoint?defaultOperationName=sayHello" /-->
			<!--to uri="http://localhost:9876/hw?serviceClass=com.javacodegeeks.HelloWorldServer"/-->
			<!--process ref="MessageProcessor"/-->			
			<!--log message="received from WS: ${body}"/-->

		</route>		
	</camelContext>
	
	<camelcxf:rsServer id="PDSControllerRS" address="/pslink"  serviceClass="uk.co.pshealth.pslink.controller.PDSController" loggingFeatureEnabled="true">		
		<camelcxf:providers>
			<!--bean class="uk.co.pshealth.pslink.mapper.XSDValidationExceptionMapper"/-->
			<bean class="uk.co.pshealth.pslink.mapper.SpineSocketTimeoutExceptionMapper"/>
			<bean class="uk.co.pshealth.pslink.mapper.CamelValidationExceptionMapper"/>
		</camelcxf:providers>		
	</camelcxf:rsServer>

	<bean id="ldapserver" class="javax.naming.directory.InitialDirContext" scope="prototype">		
		<argument>
			<props>
				<prop  key="java.naming.factory.initial">com.sun.jndi.ldap.LdapCtxFactory</prop>
				<prop  key="java.naming.provider.url">ldap://localhost:10389</prop>
				<prop  key="java.naming.security.authentication">none</prop> 
			</props>
		</argument>
	</bean>

	<!-- Defined the server endpoint to create the cxf-rs consumer -->
	<!--camel-cxf:rsServer id="rsServer" address="/pslink" loggingFeatureEnabled="true" loggingSizeLimit="20">
		<camel-cxf:serviceBeans>
			<bean id="PDSController" class="uk.co.pshealth.pslink.controller.PDSController"/>
		</camel-cxf:serviceBeans>
		<camel-cxf:providers>
			<bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
			<bean class="com.fasterxml.jackson.jaxrs.xml.JacksonJaxbXMLProvider"/>
		</camel-cxf:providers>
	</camel-cxf:rsServer-->

	<!--
		This property needs to be set 'true' in order to give preference to JacksonJsonProvider
		over the default Jettison provider.
	-->

	<bean id="errorHandler" class="org.apache.camel.builder.DeadLetterChannelBuilder">
		<property name="deadLetterUri" value="mock:error"/>
	</bean>

	<bean id="GenericExceptionHandler" scope="prototype" class="uk.co.pshealth.pslink.bean.GenericExceptionHandler"/>
	<!--bean id="PDSController" scope="prototype" class="uk.co.pshealth.pslink.controller.PDSController"/-->
	<bean id="MessageProcessor" scope="prototype" class="uk.co.pshealth.pslink.processor.MessageProcessor"/>
	<bean id="ldapSearchProcessor" scope="prototype" class="uk.co.pshealth.pslink.processor.LdapSearchProcessor"/>
	<bean id="SOAPRequestProcessor" scope="prototype" class="uk.co.pshealth.pslink.processor.SOAPRequestProcessor">
		<!--argument value="https://msg.dev.spine2.ncrs.nhs.uk/sync-service"/>
		<argument value="/home/infradmin/psHealth/certificates/new/dev.jks"/>
		<argument value="/home/infradmin/psHealth/certificates/trustStore/myTrustStore"/-->
	</bean>
	<!--cxf:cxfEndpoint id="soapWebServiceEndpoint" address="http://localhost:9876/hw" serviceClass="com.javacodegeeks.HelloWorldServerImplService" /-->

</blueprint>